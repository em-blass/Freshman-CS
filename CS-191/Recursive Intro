/*
cs 191
Recursive Intro
main.cpp
Emmet Blassingame
*/

#include <iostream>
using namespace std;

int hailstone(int n) {
    if (n == 1)return 0;
    if (n % 2 == 0) {
        cout << n / 2 << endl;
        hailstone(n / 2);
        return 0;
    }
    else {
        cout << 3 * n + 1 << endl;
        hailstone(3 * n + 1);
        return 0;
    }
    return 0;
}

int fibonacci(int n) {
    if (n == 0 || n == 1)return 1;
    return fibonacci(n - 1) + fibonacci(n - 2);
}

int sumDigits(int n) {
    if (n == 0)return 0;
    return n % 10 + sumDigits(n / 10);
}

int sum(int n) {
    if (n == 0)return 0;
    return n + sum(n - 1);
}

bool isPalindrome(string s) {
    if (s == "" || s.size() == 1) {
        return true;
    }
    int n = s.size();
    if (s[0] != s[n - 1])return false;
    return isPalindrome(s.substr(1, n - 2));
    return true;
}

int main() {
    cout << "hailstone(50)" << endl;
    cout << hailstone(50)<< endl << endl;
    cout << "fibonacci(10)" << endl;
    cout << fibonacci(10) << endl << endl;
    cout << "sumDigits(88497)" << endl;
    cout << sumDigits(88497) << endl << endl;
    cout << "sum(10)" << endl;
    cout << sum(10) << endl << endl;
    cout << "sum(1)" << endl;
    cout << sum(1) << endl << endl;
    cout << boolalpha;
    cout << "isPalindrome(\"mom\")" << endl;
    cout << isPalindrome("mom") << endl << endl;
    cout << "isPalindrome(\"momxmom\")" << endl;
    cout << isPalindrome("momxmom") << endl << endl;
    cout << "isPalindrome(\"baker\")" << endl;
    cout << isPalindrome("baker") << endl << endl;
    cout << "isPalindrome(\"bakkaB\")" << endl;
    cout << isPalindrome("bakkaB") << endl;
}  //main
